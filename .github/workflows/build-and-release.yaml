name: Build and Release Tkinter App

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  workflow_dispatch: # Allow manual triggering of workflow
jobs:
  pyinstaller-build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Versatile PyInstaller (Windows)
        uses: sayyid5416/pyinstaller@v1.8.0
        with:
          python_ver: "3.13"
          spec: "main.py"
          requirements: "requirements.txt"
          upload_exe_with_name: "OCISessionManager-Windows"
          options: --onefile --noconsole --strip --clean --name OCISessionManager --add-data "resources;resources" --icon "resources/green_icon.ico"
      - name: Upload Windows executable
        uses: actions/upload-artifact@v3
        with:
          name: OCISessionManager-Windows
          path: dist/OCISessionManager.exe

  pyinstaller-build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Versatile PyInstaller (Ubuntu)
        uses: sayyid5416/pyinstaller@v1.8.0
        with:
          python_ver: "3.13"
          spec: "main.py"
          requirements: "requirements.txt"
          upload_exe_with_name: "OCISessionManager-Ubuntu"
          options: --onefile --noconsole --strip --clean --name OCISessionManager --add-data "resources:resources" --icon "resources/green_icon.ico"
      - name: Upload Ubuntu executable
        uses: actions/upload-artifact@v3
        with:
          name: OCISessionManager-Ubuntu
          path: dist/OCISessionManager

  pyinstaller-build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Versatile PyInstaller (macOS)
        uses: sayyid5416/pyinstaller@v1.8.0
        with:
          python_ver: "3.13"
          spec: "main.py"
          requirements: "requirements.txt"
          upload_exe_with_name: "OCISessionManager-macOS"
          options: --onefile --noconsole --strip --clean --name OCISessionManager --add-data "resources:resources" --icon "resources/green_icon.ico"
      - name: Upload macOS executable
        uses: actions/upload-artifact@v3
        with:
          name: OCISessionManager-macOS
          path: dist/OCISessionManager

  create-release:
    needs:
      [
        pyinstaller-build-windows,
        pyinstaller-build-ubuntu,
        pyinstaller-build-macos,
      ]
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows executable
        uses: actions/download-artifact@v3
        with:
          name: OCISessionManager-Windows
          path: ./release-assets

      - name: Download Ubuntu executable
        uses: actions/download-artifact@v3
        with:
          name: OCISessionManager-Ubuntu
          path: ./release-assets

      - name: Download macOS executable
        uses: actions/download-artifact@v3
        with:
          name: OCISessionManager-macOS
          path: ./release-assets

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "release-$(date +'%Y%m%d')"
          release_name: "Release $(date +'%Y-%m-%d')"
          draft: false
          prerelease: false
          files: ./release-assets/*
